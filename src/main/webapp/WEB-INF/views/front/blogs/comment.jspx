<div id="comment"
     xmlns:jsp="http://java.sun.com/JSP/Page"
     xmlns:spring="http://www.springframework.org/tags"
     xmlns:sec="http://www.springframework.org/security/tags"
     version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>

    <spring:message code="comment-button-send" var="buttonSend"/>
    <spring:url var="urlComment" value="/restful/comment"/>

    <h5>Comments</h5>

    <div id="container-of-comment"><jsp:text/></div>

    <div id="showComment" class="blog-comments" style="display: none">
        <ul class="list-inline blog-panel-likes">
            <li class="item-blue">
                <strong class="comment-created-by"><jsp:text/></strong>
            </li>
            <li class="comment-reply-to-label comment-reply-to-tag" style="display: none"> to </li>
            <li class="item-green comment-reply-to-tag" style="display: none">
                <strong class="comment-reply-to"><jsp:text/></strong>
            </li>
            <li class="item-blue">
                <span class="comment-post-date"><jsp:text/></span>
            </li>
            <sec:authorize access="isAuthenticated()">
                <li class="commit-button" style="display: none">
                    <button class="btn btn-default btn-xs">commit</button>
                </li>
            </sec:authorize>
            <li class="item-blue pull-right">
                <span class="glyphicon glyphicon-thumbs-down"><jsp:text/></span>
                <span class="comment-count-not-likes"><jsp:text/></span>
            </li>
            <li class="item-blue pull-right">
                <span class="glyphicon glyphicon-thumbs-up"><jsp:text/></span>
                <span class="comment-count-likes"><jsp:text/></span>
            </li>
        </ul>
        <p class="comment-body"><jsp:text/></p>
        <div class="comment-form"><jsp:text/></div>
        <div class="comment-child" style="display: none"><jsp:text/></div>
    </div>

    <div id="editComment" style="display: none" >
        <form action="${urlComment}?form&amp;entryId=${entry.id}" class="form" role="form">
            <input type="hidden" name="createdBy"/>
            <input type="hidden" name="createdDate"/>
            <input type="hidden" name="lastModifiedBy"/>
            <input type="hidden" name="lastModifiedDate"/>
            <input type="hidden" name="postBy"/>
            <input type="hidden" name="postDate"/>
            <input type="hidden" name="version"/>
            <div class="alert alert-warning comment-body" style="display: none"><jsp:text/></div>
            <div class="form-group">
                <textarea name="body" rows="4" class="comment-body form-control"><jsp:text/></textarea>
            </div>
            <div class="form-group ">
                <button class="btn btn-info btn-group-justified btn-xs">${buttonSend}</button>
            </div>
        </form>
    </div>
    <script type="text/javascript">
        $(document).ready(function(){

            //load all comments
            var entryId = $("#entry-id").attr("value");
            $.ajax({
                url     : "${urlComment}/list/"+entryId,
                type    : "GET",
                dataType: "json"
            }).done(function( data ){
                pushCommentToHTML(data, $("#container-of-comment"));
            }).fail(function( jqXHR, textStatus){
                console.log(textStatus);
            })

            //Show and Hide Button comment
            $(".blog-panel-likes").bind({
                mouseover: function() {
                    $(this).children(".commit-button").css("display", "inline");
                },
                mouseout: function() {
                    $(this).children(".commit-button").css("display", "none");
            }});

            //Create form for new comment with parent comment
            $(".commit-button .btn").bind({
                click: function(){
                    var parentId = $(this).attr("data-context");
                    var context = $("#"+parentId).children(".comment-form").first();
                    if (context.has("form").length &lt; 1){
                        $.ajax({
                            url     : "${urlComment}/new?form",
                            type    : "GET",
                            dataType: "json"
                        }).done(function(data){
                            pushFormCommentToHtml(context, data, parentId);
                        }).fail(function( jqXHR, textStatus){
                            console.log(textStatus);
                        })
                    } else {
                        context.children().first().slideToggle();
                    }
                }
            })

            //Post new comment without parent comment
            $("#btnPostComment").click(function(){
                $.ajax({
                    url     : "${urlComment}/new?form",
                    type    : "GET",
                    dataType: "json"
                }).done(function(data){
                    pushFormCommentToHtml($("#container-of-comment"), data, null);
                }).fail(function( jqXHR, textStatus){
                    console.log(textStatus);
                })
            })

            function pushCommentToHTML(data, tagForInjection){
                data.forEach(function(comment){
                    var htmlForComment = $("#showComment").clone(true);
                    htmlForComment.attr("id","comment-" + comment.id);
                    htmlForComment.attr("data-source", comment.id);
                    htmlForComment.find(".comment-created-by").text(comment.createdBy);
                    if (comment.parentUser != null){
                        htmlForComment.find(".comment-reply-to-tag").css("display", "inline");
                        htmlForComment.find(".comment-reply-to").text(comment.parentUser);
                    }
                    htmlForComment.find(".comment-post-date").text(comment.postDate);
                    htmlForComment.find(".comment-count-likes").text(" " + comment.countLikes);
                    htmlForComment.find(".comment-count-not-likes").text(" " + comment.countNotLikes);
                    htmlForComment.find(".btn").attr("data-context", "comment-"+comment.id);
                    htmlForComment.find(".comment-body").text(comment.body);
                    if (comment.childComment.length > 0 ){
                        var child = htmlForComment.find(".comment-child");
                        child.show("slow");
                        pushCommentToHTML(comment.childComment, child);
                    }
                    htmlForComment.appendTo(tagForInjection);
                    htmlForComment.show("slow");
                });
            }

            function pushFormCommentToHtml($tagForInjection, $comment, $commentParentId){
                var $htmlForForm = $("#editComment").clone(true);
                $htmlForForm.removeAttr("id");
                var $parent = $("#"+$commentParentId);
                var $form = $htmlForForm.find("form");
                var $action = $form.attr("action");
                if ($commentParentId != null){
                    $action = $action+'&amp;parentId='+$parent.attr("data-source");
                    $form.attr("action", $action);
                } else {

                }

                $htmlForForm.find("[name='createdBy']").val($comment.createdBy);
                $htmlForForm.find("[name='createdDate']").val($comment.createdDate);
                $htmlForForm.find("[name='lastModifiedBy']").val($comment.lastModifiedBy);
                $htmlForForm.find("[name='lastModifiedDate']").val($comment.lastModifiedDate);
                $htmlForForm.find("[name='version']").val($comment.version);

                $htmlForForm.appendTo($tagForInjection);
                $htmlForForm.show("slow");
                $htmlForForm.find("textarea").focus();
            }

            //Send form
            $(document).on("submit", "#container-of-comment form", function( event ){
                //Stop default sending
                event.preventDefault();
                event.stopPropagation();

                var $form = $(this);
                $form.find(".alert").hide("slow");
                var $action = $form.attr("action");
                var $posting = $.post($action, $form.serialize());

                $posting.done(function( data ){
                    var $blog = $form.parents(".blog-comments");
                    var $tagBlog;
                    if ($blog.length){
                        $tagBlog = $($blog.get(0)).children(".comment-child");
                    } else {
                        $tagBlog = $("#container-of-comment");
                    }
                    $form.hide("slow", function(){
                        $(this).remove();
                    });
                    $tagBlog.show("slow", function(){
                        pushCommentToHTML([data.comment], $tagBlog);
                    });
                }).fail(function( jqXHR, textStatus){
                    var msg = "";
                    var data = jqXHR.responseJSON;
                    for(var prop in data){
                        if (data.hasOwnProperty(prop)){
                            msg += data[prop] + "\n";
                        }
                    }
                    $form.find(".alert").text(msg);
                    $form.find(".alert").show("slow");
                    console.log(textStatus);
                })
            })
        })
    </script>
</div>
